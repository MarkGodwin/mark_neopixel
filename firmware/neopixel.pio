
.program neopixel
.side_set 1 opt

.define public GAP_DELAY   1

.wrap_target
    out x, 1  side 0  [GAP_DELAY]   ; Go low, wait low for data
    nop       side 1                ; Go high 
    mov pins, x                     ; Stay high for a 1
.wrap

% c-sdk {

static inline void neopixel_program_init(PIO pio, uint sm, uint offset, uint pin, bool rgbw) {

    pio_gpio_init(pio, pin);
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);

    pio_sm_config c = neopixel_program_get_default_config(offset);
    sm_config_set_out_shift(&c, false, true, rgbw ? 32 : 24);
    sm_config_set_sideset_pins(&c, pin);
    sm_config_set_out_pins(&c, pin, 1);
    sm_config_set_set_pins(&c, pin, 1);
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);

    const int bitTime = 1200; // ns for each bit
    const int cyclesPerBit = neopixel_program.length + neopixel_GAP_DELAY;
    const int nsPerCycle = bitTime / cyclesPerBit;
    float div = 0.125f * nsPerCycle;
    sm_config_set_clkdiv(&c, div);

    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}
%}